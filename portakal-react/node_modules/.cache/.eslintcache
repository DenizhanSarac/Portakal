[{"C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\index.js":"1","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\App.js":"2","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\Map\\Map.jsx":"3","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\List\\List.jsx":"4","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\Header\\Header.jsx":"5","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\api\\index.js":"6","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\mapStyles.js":"7","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\Map\\styles.js":"8","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\List\\styles.js":"9","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\Header\\styles.js":"10","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\PlaceDetails\\PlaceDetails.jsx":"11","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\PlaceDetails\\styles.js":"12"},{"size":154,"mtime":1642457725932,"results":"13","hashOfConfig":"14"},{"size":2907,"mtime":1642501850037,"results":"15","hashOfConfig":"14"},{"size":2467,"mtime":1642501297311,"results":"16","hashOfConfig":"14"},{"size":2178,"mtime":1642597330477,"results":"17","hashOfConfig":"14"},{"size":1160,"mtime":1642596132918,"results":"18","hashOfConfig":"14"},{"size":1149,"mtime":1642528977211,"results":"19","hashOfConfig":"14"},{"size":1736,"mtime":1642501143197,"results":"20","hashOfConfig":"14"},{"size":455,"mtime":1642460262004,"results":"21","hashOfConfig":"14"},{"size":512,"mtime":1642462322327,"results":"22","hashOfConfig":"14"},{"size":1143,"mtime":1642598417239,"results":"23","hashOfConfig":"14"},{"size":2934,"mtime":1642596387833,"results":"24","hashOfConfig":"14"},{"size":359,"mtime":1642501292085,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e6kohz",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\index.js",[],"C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\App.js",["54","55"],"import React, { useState, useEffect } from 'react';\r\nimport { CssBaseline, Grid } from '@material-ui/core';\r\n\r\nimport { getPlacesData, getWeatherData } from './api';\r\nimport Header from './components/Header/Header';\r\nimport List from './components/List/List';\r\nimport Map from './components/Map/Map';\r\n\r\nconst App = () => {\r\n  const [type, setType] = useState('restaurants');\r\n  const [rating, setRating] = useState('');\r\n\r\n  const [coords, setCoords] = useState({});\r\n  const [bounds, setBounds] = useState(null);\r\n\r\n  const [weatherData, setWeatherData] = useState([]);\r\n  const [filteredPlaces, setFilteredPlaces] = useState([]);\r\n  const [places, setPlaces] = useState([]);\r\n\r\n  const [autocomplete, setAutocomplete] = useState(null);\r\n  const [childClicked, setChildClicked] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(({ coords: { latitude, longitude } }) => {\r\n      setCoords({ lat: latitude, lng: longitude });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = places.filter((place) => Number(place.rating) > rating);\r\n\r\n    setFilteredPlaces(filtered);\r\n  }, [rating]);\r\n\r\n  useEffect(() => {\r\n    if (bounds) {\r\n      setIsLoading(true);\r\n\r\n      getWeatherData(coords.lat, coords.lng)\r\n        .then((data) => setWeatherData(data));\r\n\r\n      getPlacesData(type, bounds.sw, bounds.ne)\r\n        .then((data) => {\r\n          setPlaces(data.filter((place) => place.name && place.num_reviews > 0));\r\n          setFilteredPlaces([]);\r\n          setRating('');\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  }, [bounds, type]);\r\n\r\n  const onLoad = (autoC) => setAutocomplete(autoC);\r\n\r\n  const onPlaceChanged = () => {\r\n    const lat = autocomplete.getPlace().geometry.location.lat();\r\n    const lng = autocomplete.getPlace().geometry.location.lng();\r\n\r\n    setCoords({ lat, lng });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Header onPlaceChanged={onPlaceChanged} onLoad={onLoad} />\r\n      <Grid container spacing={3} style={{ width: '100%' }}>\r\n        <Grid item xs={12} md={4}>\r\n          <List\r\n            isLoading={isLoading}\r\n            childClicked={childClicked}\r\n            places={filteredPlaces.length ? filteredPlaces : places}\r\n            type={type}\r\n            setType={setType}\r\n            rating={rating}\r\n            setRating={setRating}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={8} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n          <Map\r\n            setChildClicked={setChildClicked}\r\n            setBounds={setBounds}\r\n            setCoords={setCoords}\r\n            coords={coords}\r\n            places={filteredPlaces.length ? filteredPlaces : places}\r\n            weatherData={weatherData}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\Map\\Map.jsx",["56","57"],"import React from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Paper, Typography, useMediaQuery } from '@material-ui/core';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport mapStyles from '../../mapStyles';\r\nimport useStyles from './styles.js';\r\n\r\nconst Map = ({ coords, places, setCoords, setBounds, setChildClicked, weatherData }) => {\r\n  const matches = useMediaQuery('(min-width:600px)');\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.mapContainer}>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAP_API_KEY }}\r\n        defaultCenter={coords}\r\n        center={coords}\r\n        defaultZoom={14}\r\n        margin={[50, 50, 50, 50]}\r\n        options={{ disableDefaultUI: true, zoomControl: true, styles: mapStyles }}\r\n        onChange={(e) => {\r\n          setCoords({ lat: e.center.lat, lng: e.center.lng });\r\n          setBounds({ ne: e.marginBounds.ne, sw: e.marginBounds.sw });\r\n        }}\r\n        onChildClick={(child) => setChildClicked(child)}\r\n      >\r\n        {places.length && places.map((place, i) => (\r\n          <div\r\n            className={classes.markerContainer}\r\n            lat={Number(place.latitude)}\r\n            lng={Number(place.longitude)}\r\n            key={i}\r\n          >\r\n            {!matches\r\n              ? <LocationOnOutlinedIcon color=\"primary\" fontSize=\"large\" />\r\n              : (\r\n                <Paper elevation={3} className={classes.paper}>\r\n                  <Typography className={classes.typography} variant=\"subtitle2\" gutterBottom> {place.name}</Typography>\r\n                  <img\r\n                    className={classes.pointer}\r\n                    src={place.photo ? place.photo.images.large.url : 'https://www.foodserviceandhospitality.com/wp-content/uploads/2016/09/Restaurant-Placeholder-001.jpg'}\r\n                  />\r\n                  <Rating name=\"read-only\" size=\"small\" value={Number(place.rating)} readOnly />\r\n                </Paper>\r\n              )}\r\n          </div>\r\n        ))}\r\n        {weatherData?.list?.length && weatherData.list.map((data, i) => (\r\n          <div key={i} lat={data.coord.lat} lng={data.coord.lon}>\r\n            <img src={`http://openweathermap.org/img/w/${data.weather[0].icon}.png`} height=\"70px\" />\r\n          </div>\r\n        ))}\r\n      </GoogleMapReact>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\List\\List.jsx",[],"C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\api\\index.js",[],"C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\mapStyles.js",["58"],"export default [\r\n    {\r\n      featureType: 'all',\r\n      elementType: 'all',\r\n      stylers: [\r\n        {\r\n          saturation: '32',\r\n        },\r\n        {\r\n          lightness: '-3',\r\n        },\r\n        {\r\n          visibility: 'on',\r\n        },\r\n        {\r\n          weight: '1.18',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: 'administrative',\r\n      elementType: 'labels',\r\n      stylers: [\r\n        {\r\n          visibility: 'on',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: 'landscape',\r\n      elementType: 'labels',\r\n      stylers: [\r\n        {\r\n          visibility: 'off',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: 'landscape.man_made',\r\n      elementType: 'all',\r\n      stylers: [\r\n        {\r\n          saturation: '-70',\r\n        },\r\n        {\r\n          lightness: '14',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: 'poi',\r\n      elementType: 'labels',\r\n      stylers: [\r\n        {\r\n          visibility: 'off',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: 'road',\r\n      elementType: 'labels',\r\n      stylers: [\r\n        {\r\n          visibility: 'off',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: 'transit',\r\n      elementType: 'labels',\r\n      stylers: [\r\n        {\r\n          visibility: 'off',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: 'water',\r\n      elementType: 'all',\r\n      stylers: [\r\n        {\r\n          saturation: '100',\r\n        },\r\n        {\r\n          lightness: '-14',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: 'water',\r\n      elementType: 'labels',\r\n      stylers: [\r\n        {\r\n          visibility: 'off',\r\n        },\r\n        {\r\n          lightness: '12',\r\n        },\r\n      ],\r\n    },\r\n  ];","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\Map\\styles.js",[],"C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\List\\styles.js",[],"C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\Header\\styles.js",[],"C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\PlaceDetails\\PlaceDetails.jsx",["59"],"import React from 'react';\r\nimport { Box, Typography, Button, Card, CardMedia, CardContent, CardActions, Chip } from '@material-ui/core';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport useStyles from './styles.js';\r\n\r\nconst PlaceDetails = ({ place, selected, refProp }) => {\r\n  if (selected) refProp?.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card elevation={6}>\r\n      <CardMedia\r\n        style={{ height: 350 }}\r\n        image={place.photo ? place.photo.images.large.url : 'https://www.foodserviceandhospitality.com/wp-content/uploads/2016/09/Restaurant-Placeholder-001.jpg'}\r\n        title={place.name}\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\">{place.name}</Typography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" my={2}>\r\n          <Rating name=\"read-only\" value={Number(place.rating)} readOnly />\r\n          <Typography component=\"legend\">{place.num_reviews} Görüntülenme</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <Typography component=\"legend\">Fiyatlandırma</Typography>\r\n          <Typography gutterBottom variant=\"subtitle1\">\r\n            {place.price_level}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <Typography component=\"legend\">Derece</Typography>\r\n          <Typography gutterBottom variant=\"subtitle1\">\r\n            {place.ranking}\r\n          </Typography>\r\n        </Box>\r\n        {place?.awards?.map((award) => (\r\n          <Box display=\"flex\" justifyContent=\"space-between\" my={1} alignItems=\"center\">\r\n            <img src={award.images.small} />\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">{award.display_name}</Typography>\r\n          </Box>\r\n        ))}\r\n        {place?.cuisine?.map(({ name }) => (\r\n          <Chip key={name} size=\"small\" label={name} className={classes.chip} />\r\n        ))}\r\n        {place.address && (\r\n          <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" className={classes.subtitle}>\r\n            <LocationOnIcon />{place.address}\r\n          </Typography>\r\n        )}\r\n        {place.phone && (\r\n          <Typography variant=\"body2\" color=\"textSecondary\" className={classes.spacing}>\r\n            <PhoneIcon /> {place.phone}\r\n          </Typography>\r\n        )}\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => window.open(place.web_url, '_blank')}>\r\n          Trip Advisor\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => window.open(place.website, '_blank')}>\r\n          Website\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PlaceDetails;","C:\\Users\\Deniz\\Desktop\\portakal-react\\src\\components\\PlaceDetails\\styles.js",[],{"ruleId":"60","severity":1,"message":"61","line":34,"column":6,"nodeType":"62","endLine":34,"endColumn":14,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":51,"column":6,"nodeType":"62","endLine":51,"endColumn":20,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":41,"column":19,"nodeType":"68","endLine":44,"endColumn":21},{"ruleId":"66","severity":1,"message":"67","line":52,"column":13,"nodeType":"68","endLine":52,"endColumn":102},{"ruleId":"69","severity":1,"message":"70","line":1,"column":1,"nodeType":"71","endLine":101,"endColumn":5},{"ruleId":"66","severity":1,"message":"67","line":40,"column":13,"nodeType":"68","endLine":40,"endColumn":45},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'places'. Either include it or remove the dependency array.","ArrayExpression",["72"],"React Hook useEffect has missing dependencies: 'coords.lat' and 'coords.lng'. Either include them or remove the dependency array.",["73"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [places, rating]",{"range":"78","text":"79"},"Update the dependencies array to be: [bounds, coords.lat, coords.lng, type]",{"range":"80","text":"81"},[1181,1189],"[places, rating]",[1636,1650],"[bounds, coords.lat, coords.lng, type]"]